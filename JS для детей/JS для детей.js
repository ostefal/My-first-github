Shift + Alt + F - отформатировать документ
shift + alt + A - закоментить кусок кода. /* Комментарий */
// Ctrl + /        - закоментить строку

Math.random(); - случайный выбор
Math.random(); - случайное число 0 <= число <1  (0.4683660550207769)
Math.floor(); - округление до целых 

// Считаем котиков
var drawCats = function (howManyTimes) {
    for (var i = 0; i < howManyTimes; i++) {
        console.log(i + "=^.^=");
    };
};
drawCats(10);

// Типы данных и переменные    // Типы данных и переменные    // Типы данных и переменные    // Типы данных и переменные    
"Привет я строка";
5;
true; //булево значение

var nik // создана пременная
var nik = 10; // создана пременная и присв. значение
nik = 15; // значение перем. изменено

// возраст в секундах
seconds_in_a_minute = 60;
minute_in_a_hour = 60;
seconds_in_a_hour = seconds_in_a_minute * minute_in_a_hour;
seconds_in_a_day = seconds_in_a_hour * 24;
seconds_in_a_year = seconds_in_a_day * 365;
my_age = ;
seconds_in_a_my_age = seconds_in_a_year * my_age;

// инкремент и декремент ++ и -- 
high_five = 0;
high_five++;
0
high_five
1

high_five = 0;
++high_five;
1
high_five
1

// += и -= так же  *= и /=
var score = 100;
score += 30;
130
score -= 100;
30

var score = 100;
score *= 30;
3000
score /= 30;
100

// СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   
// СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   
// СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   // СТРОКИ   

var I_study = "Я учу "; //объединение строк
var JS = "Java Script";
I_study + JS;
"Я учу Java Script"

var string = "Супердлинная строка" // длинна строки .length
string.length
19
"Супердлинная строка".length
19
string[0]; // символ строки (отсчёт от 0)
"С"
string[1];
string[2];
string[3];
string[4];
"у"
"п"
"е"
"р"

var long_string = "Эта длинная строка такая длинная" // Срез строки .slise
long_string.slice(4, 18);
"длинная строка"
long_string.slice(0, 18);
"Эта длинная строка"
long_string.slice(17); // срез с 17 символа
"такая длинная"

long_string.toUpperCase(); // В верхн и нижн РЕГИСТР .toUpperCase(); и .toLowerCase();
"ЭТА ДЛИННАЯ СТРОКА ТАКАЯ ДЛИННАЯ"
long_string.toLowerCase();
"эта длинная строка такая длинная"

    // Булевы значения true и false. Логические операции

    && - И(амперсанд).
    || - ИЛИ(pipe пайпс - труба).
    !  - НЕ().

var isWeekend = false;
var hadShower = true;
var hasApple = false;
var hasOrange = true;

var shouldGoToSchool = !isWeekend && hadShower && (hasApple || hasOrange);
console.log(shouldGoToSchool);
true

    // Сравнение чисел с помощью будевых значений

    == - сравнивает независимо от типа (практически равно, так же 0 == false, 1 == true? "5"==5)
    ===  сравнивает с проверкой типа (разные типы всегда будут false)


// Ограничение роста на отракционе
hiteRestriction = 150;
height = prompt("Какого ты роста?");

if (height >= hiteRestriction) {
    alert("Проходи кататься на этих сумашедших горках!!!")
}
else {
    alert("Тебе надо подрасти =,(((( ")
}

// Ребята угадывают загаданное число

var mySecretNumber;
mySecretNumber = prompt("Напиши загаданное число");
var numberChico = Math.floor(Math.random()*10)+1;
var numberHarpo = Math.floor(Math.random()*10)+1;
var namberGroucho = Math.floor(Math.random()*10)+1;

if (mySecretNumber == numberChico) {
    alert("Чико угадал число " + mySecretNumber);
} else if (mySecretNumber == numberHarpo) {
    alert("Харпо уuадал число "+mySecretNumber);
} else if (mySecretNumber == namberGroucho) {
    alert("Гручо угадал число "+mySecretNumber);
} else {
    alert ("Никто не угадал твоё число!)))");
}


// Правила входа в кинотеатр. Возраст 12+ или совместно с родителями   
// КОД НЕ РАБОТАЕТ. НУЖНО ФИКСИТЬ КОМАНДУ prompt. Сейчас prompt присваивает одно и тоже значение двум переменным. КОД НЕ РАБОТАЕТ.


var age = prompt("Какой у тебя возраст?");
var accompanied = prompt("Ты пришёл в сопровождении взрослых?");

document.write(age);
console.log(age);

if (age => 12) {
    alert("Приятного просмотра, проходите на ваши места.");
// }else if (accompanied == "да") {
//     alert("Приятного просмотра, проходите на ваши места.");
}else {
    alert("Малышь, тебе нужно подрасти или придти со взрослым");
}

// МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ
// МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ
// МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ   // МАССИВЫ

[] - массив
var name_massive = ["элемент", 354, ["ещё один массив в массиве", 001 , 100], 
"ещё элемент, и массив завершается"];
.length - длинна массива
.push() - добавить элемент в конец массива
.pop() - удалить элемент в конце массива (последний) и вывести значение
.unshift() - добавить элемент в начало массива
.shift() - удалить элемент в начале массива (первый) и вывести значение
.concat() - объединить массивы
.indexOf() - поиск индекса элемента в массиве
.join() - превращение массива в строку
Math.random(); - случайный выбор
Math.random(); - случайное число 0 <= число <1  (0.4683660550207769)
Math.floor(); - округление до целых 



var dinosaurs = [
    "тиранрзавр",
    "велоцираптор",
    "стегозавр",
    "трицератопс",
    "брахиозавр",
    "птеранодор",
    "апатозавр",
    "диплодок",
    "компсогнат"
];
/* элементы   элементы   элементы   элементы*//* элементы   элементы   элементы   элементы*/
/* элементы   элементы   элементы   элементы*//* элементы   элементы   элементы   элементы*/
dinosaurs[1]; - доступ к элементу [индекс]  
// велоцираптор
dinosaurs[3];
// трицератопс
dinosaurs[1] = "другой динозавр"; - замена содержимого
dinosaurs[1]
// другой динозавр
dinosaurs[110] = "новый элемент"; - добавить элемент в массив
dinosaurs;
(111) ["тиранрзавр", "другой динозавр", "стегозавр", "трицератопс", "брахиозавр", "птеранодор", "апатозавр", "диплодок", "компсогнат", empty × 101, "новый элемент"]
0: "тиранрзавр"
1: "другой динозавр"
2: "стегозавр"
3: "трицератопс"
4: "брахиозавр"
5: "птеранодор"
6: "апатозавр"
7: "диплодок"
8: "компсогнат"
110: "новый элемент"
length: 111
__proto__: Array(0)
var dinosaurs = [   /* - вложенный массив *//* - вложенный массив */
    "тиранрзавр",
    "велоцираптор",
    ["стегозавр",
    110,
    "брахиозавр"],
    "птеранодор",
    "апатозавр",
    "диплодок",
    "компсогнат"
];
dinosaurs[2]; /* - вывод значений массива */
(3) ["стегозавр", 110, "брахиозавр"]
dinosaurs[2][1];   /* - вывод конкретных значений массива */
110
.length /* - количество элементов в массиве */
dinosaurs.length;
7
.length - 1; - /* длинна массива */
dinosaurs.length - 1;
6
dinosaurs[dinosaurs.length - 1]; /* последний элемент массива */
"компсогнат"

переменная.push("Какой то элемент"); // добавить элемент в конец массива.
var animals = [];
animals.push("Кот");
animals.push("Пёс");
animals.push("Лама");
animals;
(3) ["Кот", "Пёс", "Лама"]
переменная.unshift("Какой то элемент"); /*  - добавить элемент в начало массива/ */
animals.unshift("Мартышка");
animals.unshift("Белый медведь");
animals;
(5) ["Белый медведь", "Мартышка", "Кот", "Пёс", "Лама"]
переменная.pop("Какой то элемент"); // удалить элемент в конеце массива.
animals.pop();
(4) ["Белый медведь", "Мартышка", "Кот", "Пёс"]
переменная.shift("Какой то элемент");   /*  - удалить элемент в начале массива */
animals.shift();
(3) ["Мартышка", "Кот", "Пёс"]
animals.shift();       - возвращает удаляемое значение Белый медведь
"Белый медведь"
lastAnimal = animals.shift();  - присваеваем удаляемое значение переменной
lastAnimal;
"Белый медведь"

// Объединение массивов   // Объединение массивов   // Объединение массивов   // Объединение массивов   

имя_первого_массива.concat(имя_второго_массива) - объединить массивы

var furryAnimals = ["Альпака", "Кольцхвостый лемур", "Йети"]; 
var scalyAnimals = ["Удав", "Годзилла"];
var feathered = ["Ара", "Додо"];

var furryAnimalsAndscalyAnimals = furryAnimals.concat(scalyAnimals);
furryAnimalsAndscalyAnimals;
(5) ["Альпака", "Кольцхвостый лемур", "Йети", "Удав", "Годзилла"]
var allAnimals = furryAnimals.concat(scalyAnimals, feathered);
allAnimals;
(7) ["Альпака", "Кольцхвостый лемур", "Йети", "Удав", "Годзилла", "Ара", "Додо"]

// Поиск индекса элемента в массиве

массив.indexOf("значение элемента");
var colors = ["красный", "зелёный", "синий"];
colors.indexOf("синий");
2

// Превращение массива в строку с выбором разделителя

allAnimals.join(", "); вибираем разделитель между элементами в строке
Альпака, Кольцхвостый лемур, Йети, Удав, Годзилла, Ара, Додо
allAnimals.join("*** ");
Альпака*** Кольцхвостый лемур*** Йети*** Удав*** Годзилла*** Ара*** Додо

// Поиск дороги домой
var landmarks = [] //использование массива. Дорога домой
landmarks.push("Мой дом");
landmarks.push("Мигающий фонарь");
landmarks.push("Протекающий гидрант");
landmarks.push("Пожарная станция");
landmarks.push("Приют для кошек");
landmarks.push("Моя бывшая школа");
landmarks.push("Дом подруги");
landmarks;
(7) ["Мой дом", "Мигающий фонарь", "Протекающий гидрант", "Пожарная станция", "Приют для кошек", "Моя бывшая школа", "Дом подруги"]

//  Случайный выбор

Math.random(); - случайное число 0 <= число <1  (0.4683660550207769)
Math.floor(); - округление до целых 
Math.floor(Math.random()*10);   - от 0 до 9
Math.floor(Math.random()*10)+1; - от 1 до 10. 

landmarks[Math.floor(Math.random() * 7)]; //Случайный выбор из массива от 0 до 7
Пожарная станция

// шар судьбы

ballOfFate = [
    "Звучит не плохо",
    "Да, это определённо надо сделать",
    "Не думаю, что это хорошая идея",
    "Может, не сегодня?",
    "Действуй"
]
ballOfFate[Math.floor(Math.random() * ballOfFate.length)];
 Звучит не плохо
ballOfFate.push("Компьютер говорит НЕТ!");
 Может, не сегодня?

// Генератор случайных дразнилок

var bodyPart = [
    "глаз",
    "нос",
    "череп",
    "стул",
    "сосок",
    "палец"
]
var abjective = [
    "гадкий",
    "вонючий",
    "грязный",
    "склизкий",
    "пухлый",
    "противный"
]
var words = [
    "выдра",
    "муха",
    "дубина",
    "мартышка",
    "крыса"
]
var myTeaser = ["У тебя", bodyPart[Math.floor(Math.random() *
bodyPart.length)], "словно", abjective[Math.floor(Math.random() * 
abjective.length)], words[Math.floor(Math.random() * words.length)],
"!!!"].join(" ");
У тебя сосок словно склизкий мартышка !!!

// ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   
// ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   
// ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   // ОБЪЕКТЫ   

{} - объект
var имя_объекта = {};       /* - создение объекта */
Object.keys();//узнать все ключи объекта,возвращает массив со всеми ключами


var имя_объекта = {                   // - создение объекта
    ключ : "значение",
    "ключ с пробелом" : "любое значение",
    ключ_без_пробела : 110
};

имя_объекта.ключ;  // доступ к значению "", ТОЧЕЧНАЯ НОТАЦИЯ
имя_объекта["ключ с пробелом"]; //доступ к значению внутри объекта

var cat = {                 // - создение объекта 
    legs: 3,            
    name: "Гармония",    
    color: "Черепаховый" 
};
cat["age"] = 110;   // добавляем новые элементы объекта
cat.tail = 14;      // добавляем новые элементы объекта без "", ТОЧЕЧНАЯ НОТАЦИЯ

Object.keys(cat); //узнать все ключи объекта
"(5) ["legs", "name", "color", "age", "tail"]"
cat["name"];   //доступ к значению внутри объекта
"Гармония"
cat.age;       //доступ к значению внутри объекта без "", ТОЧЕЧНАЯ НОТАЦИЯ
"110"
